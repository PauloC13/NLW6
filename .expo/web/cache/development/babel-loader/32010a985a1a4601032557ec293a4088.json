{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\NLW\\\\gameplay\\\\src\\\\hooks\\\\auth.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport * as AuthSession from \"expo-auth-session\";\nimport { REDIRECT_URI, SCOPE, RESPONSE_TYPE, CLIENT_ID } from \"../config\";\nimport { api } from \"../service/api\";\nexport var AuthContext = createContext({});\n\nfunction AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  function signIn() {\n    var authUrl, response;\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoading(true);\n            authUrl = api.defaults.baseURL + \"/oauth2/authorize?client_id=\" + CLIENT_ID + \"&redirect_uri=\" + REDIRECT_URI + \"&response_type=\" + RESPONSE_TYPE + \"}&scope=\" + SCOPE;\n            response = AuthSession.startAsync({\n              authUrl: authUrl\n            });\n            console.log(response);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            throw new Error('Não foi possivel autenticar');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      signIn: signIn\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, children);\n}\n\nfunction useAuth() {\n  var context = useContext(AuthContext);\n  return context;\n}\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/NLW/gameplay/src/hooks/auth.tsx"],"names":["React","createContext","useContext","useState","AuthSession","REDIRECT_URI","SCOPE","RESPONSE_TYPE","CLIENT_ID","api","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","signIn","authUrl","defaults","baseURL","response","startAsync","console","log","Error","useAuth","context"],"mappings":";;;AAAA,OAAOA,KAAP,IACIC,aADJ,EAEIC,UAFJ,EAGIC,QAHJ,QAKQ,OALR;AAOC,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAEA,SACGC,YADH,EAEGC,KAFH,EAGGC,aAHH,EAIGC,SAJH;AAOD,SAASC,GAAT;AAoBA,OAAO,IAAMC,WAAW,GAAGT,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASU,YAAT,OAAuD;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;;AACnD,kBAAwBT,QAAQ,CAAO,EAAP,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AAEA,mBAA6BX,QAAQ,CAAC,KAAD,CAArC;AAAA;AAAA,MAAMY,OAAN;AAAA,MAAeC,UAAf;;AAEA,WAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQD,YAAAA,UAAU,CAAC,IAAD,CAAV;AAEME,YAAAA,OAJd,GAI2BT,GAAG,CAACU,QAAJ,CAAaC,OAJxC,oCAI8EZ,SAJ9E,sBAIwGH,YAJxG,uBAIsIE,aAJtI,gBAI8JD,KAJ9J;AAKce,YAAAA,QALd,GAK0BjB,WAAW,CAACkB,UAAZ,CAAuB;AAAEJ,cAAAA,OAAO,EAAPA;AAAF,aAAvB,CAL1B;AAMQK,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AANR;AAAA;;AAAA;AAAA;AAAA;AAAA,kBASc,IAAII,KAAJ,CAAU,6BAAV,CATd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBZ,MAAAA,IAAI,EAAJA,IADyB;AAEzBI,MAAAA,MAAM,EAANA;AAFyB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIML,QAJN,CADJ;AAQH;;AAED,SAASc,OAAT,GAAkB;AACd,MAAMC,OAAO,GAAGzB,UAAU,CAACQ,WAAD,CAA1B;AAEA,SAAOiB,OAAP;AACH;;AAED,SACIhB,YADJ,EAEIe,OAFJ","sourcesContent":["import React, { \r\n    createContext,\r\n    useContext,\r\n    useState,\r\n    ReactNode\r\n } from \"react\";\r\n\r\n import * as AuthSession from \"expo-auth-session\";\r\n\r\n import {\r\n    REDIRECT_URI,\r\n    SCOPE,\r\n    RESPONSE_TYPE,\r\n    CLIENT_ID,\r\n    CDN_IMAGE\r\n } from '../config'\r\nimport { api } from \"../service/api\";\r\n\r\ntype User ={\r\n    id: string;\r\n    username: string;\r\n    firstName: string;\r\n    avatar: string;\r\n    email: string;\r\n    token: string;\r\n}\r\n\r\ntype AuthContextData={\r\n    user: User;\r\n    signIn: () => Promise<void>;\r\n}\r\n\r\ntype AuthProviderProps ={\r\n    children: ReactNode;\r\n}\r\n\r\nexport const AuthContext = createContext({} as AuthContextData );\r\n\r\nfunction AuthProvider({ children } : AuthProviderProps){\r\n    const [user, setUser] = useState<User>({} as User); \r\n\r\n    const[loading, setLoading] = useState(false);\r\n\r\n    async function signIn(){\r\n        try{\r\n            setLoading(true);\r\n\r\n            const authUrl = `${api.defaults.baseURL}/oauth2/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}}&scope=${SCOPE}`; \r\n            const response =  AuthSession.startAsync({ authUrl });\r\n            console.log(response);\r\n\r\n        }catch{\r\n            throw new Error('Não foi possivel autenticar');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider value={{\r\n            user,\r\n            signIn\r\n            }}>\r\n            { children }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nfunction useAuth(){\r\n    const context = useContext(AuthContext);\r\n\r\n    return context;\r\n}\r\n\r\nexport{\r\n    AuthProvider,\r\n    useAuth\r\n}"]},"metadata":{},"sourceType":"module"}